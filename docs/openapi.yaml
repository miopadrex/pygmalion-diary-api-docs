# docs/openapi.yaml
openapi: 3.0.0
info:
  title: 피그말리온 다이어리 API
  description: 회사에서 좋았던 일을 기록하는 다이어리 서비스
  version: 1.0.0

# Base URL: https://umlnlzcebxiumpjdpvsq.supabase.co
servers:
  - url: https://umlnlzcebxiumpjdpvsq.supabase.co
    description: Supabase 서버

paths:
  /auth/v1/signup:
    post:
      summary: 회원가입
      tags: [User Management]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "user@example.com"
                password:
                  type: string
                  minLength: 6
                  example: "password123"
                data:
                  type: object
                  properties:
                    nickname:
                      type: string
                      example: "김개발"
      responses:
        '200':
          description: 성공

  /auth/v1/token:
    post:
      summary: 로그인
      tags: [User Management]
      parameters:
        - name: grant_type
          in: query
          required: true
          schema:
            type: string
            enum: [password]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "someone@email.com"
                password:
                  type: string
                  example: "QRBtlWfSjmGdpSInaqDh"
      responses:
        '200':
          description: 로그인 성공

  /auth/v1/user:
    get:
      summary: 사용자 정보 조회
      tags: [User Management]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
            example: "Bearer USER_TOKEN"
      responses:
        '200':
          description: 사용자 정보 조회 성공
    put:
      summary: 사용자 정보 업데이트
      tags: [User Management]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
            example: "Bearer USER_TOKEN"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "someone@email.com"
                password:
                  type: string
                  example: "new-password"
                data:
                  type: object
                  example:
                    key: "value"
      responses:
        '200':
          description: 사용자 정보 업데이트 성공

  /auth/v1/recover:
    post:
      summary: 비밀번호 재설정
      tags: [User Management]
      parameters:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "someone@email.com"
      responses:
        '200':
          description: 재설정 이메일 발송 성공

  /auth/v1/logout:
    post:
      summary: 로그아웃
      tags: [User Management]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
            example: "Bearer USER_TOKEN"
      responses:
        '200':
          description: 로그아웃 성공

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    apiKey:
      type: apiKey
      in: header
      name: apikey
